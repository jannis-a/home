name: pre-commit

on:
  pull_request:

jobs:
  get-hooks:
    runs-on: ubuntu-latest
    outputs:
      ids: ${{ steps.hooks.outputs.ids }}
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: frenck/action-setup-yq@v1.0.2
      - id: hooks
        run: |
          hooks="$(yq -o=json -I=0 '[.repos[].hooks[].id]' .pre-commit-config.yaml)"
          echo "ids=${hooks}" >> $GITHUB_OUTPUT

  run-hook:
    runs-on: ubuntu-latest
    needs: get-hooks
    strategy:
      fail-fast: false
      matrix:
        hook: ${{ fromJSON(needs.get-hooks.outputs.ids) }}
    steps:
      - uses: actions/checkout@v5.0.0
      - id: versions
        run: |
          echo "terragrunt=$(cat .terragrunt-version)" >> $GITHUB_OUTPUT
          echo "tofu=$(cat .opentofu-version)" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT
      - uses: gruntwork-io/terragrunt-action@v3.0.2
        with:
          tg_version: ${{ steps.versions.outputs.terragrunt }}
          tofu_version: ${{ steps.versions.outputs.tofu }}
      - uses: actions/setup-python@v6.0.0
      - run:
          echo "### My var" >> $GITHUB_STEP_SUMMARY
          echo "\`MY_VAR2=$AWS_ACCESS_KEY_ID\`" >> $GITHUB_STEP_SUMMARY
      - uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - uses: 1password/load-secrets-action@v3
        with:
          export-env: true
        env:
          OP_ENV_FILE: ${{ env.GITHUB_WORKSPACE }}/.env
      - run:
          echo "### My var" >> $GITHUB_STEP_SUMMARY
          echo "\`MY_VAR3=$AWS_ACCESS_KEY_ID\`" >> $GITHUB_STEP_SUMMARY
      - uses: pre-commit/action@v3.0.1
        env:
          AWS_EC2_METADATA_DISABLED: true
        with:
          extra_args: ${{ matrix.hook }} --all-files
